---
const servicios = [
  {
    img: '/assets/NEMOCON 1.jpg',
    alt: 'Servicio 1',
    titulo: 'Servicio 1',
    desc: 'Lorem ipsum dolor sit amet consectetur. Lacus pulvinar pharetra senectus sociis.'
  },
  {
    img: '/assets/SESQUILE 1.JPG',
    alt: 'Servicio 2',
    titulo: 'Servicio 2',
    desc: 'Lorem ipsum dolor sit amet consectetur. Lacus pulvinar pharetra senectus sociis.'
  },
  {
    img: '/assets/LOS PATOS 1.jpg',
    alt: 'Servicio 3',
    titulo: 'Servicio 3',
    desc: 'Lorem ipsum dolor sit amet consectetur. Lacus pulvinar pharetra senectus sociis.'
  },
  {
    img: '/assets/fusagasuga 1.jpg',
    alt: 'Servicio 4',
    titulo: 'Servicio 4',
    desc: 'Soluciones avanzadas para el tratamiento de aguas residuales industriales.'
  },
  {
    img: '/assets/Verganzo 1.jpg',
    alt: 'Servicio 5',
    titulo: 'Servicio 5',
    desc: 'Asesoría y consultoría en normativas ambientales y de agua.'
  },
  {
    img: '/assets/ARMENIA 1.jpg',
    alt: 'Servicio 6',
    titulo: 'Servicio 6',
    desc: 'Mantenimiento preventivo y correctivo de equipos de tratamiento.'
  },
];
---
<section class="w-full bg-[#EAEAEA] py-8 md:py-12" id="servicios">
  <div class="max-w-6xl mx-auto px-4">
    <h3 class="text-[#06214E] text-xl sm:text-2xl md:text-3xl font-bold mb-6 md:mb-8 text-center fade-section opacity-0 translate-y-8 transition-all duration-700 will-change-transform">
      Nuestros Servicios
    </h3>
    <div class="relative">
      <!-- Controles de navegación -->
      <button
        id="prev-servicio"
        class="absolute left-2 md:left-4 top-1/2 -translate-y-1/2 bg-black/50 text-white p-1 md:p-2 rounded-full hover:bg-black/70 transition-colors z-10 hidden sm:flex"
        aria-label="Servicio anterior"
        type="button"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 md:h-6 md:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>
      <!-- Carrusel -->
      <div
        id="carousel-servicios"
        class="flex overflow-x-auto overflow-y-hidden gap-4 md:gap-6 scrollbar-hide scroll-smooth snap-x snap-mandatory pb-4 md:pb-0 h-[340px] md:h-[370px]"
        tabindex="0"
        aria-label="Carrusel de servicios"
      >
        {servicios.map((servicio, idx) => (
          <div
            class="bg-white rounded-lg shadow-md p-3 md:p-4 flex flex-col items-center min-w-[250px] sm:min-w-[280px] max-w-xs snap-center hover:shadow-lg transition-shadow fade-section opacity-0 translate-y-8 transition-all duration-700 will-change-transform min-h-[340px] md:min-h-[370px]"
            tabindex="0"
            aria-label={servicio.titulo}
          >
            <img
              src={servicio.img}
              alt={servicio.alt}
              class="rounded mb-3 md:mb-4 w-full h-32 sm:h-40 object-cover"
              width="400"
              height="160"
              loading="lazy"
              decoding="async"
              fetchpriority="low"
            />
            <h4 class="text-[#06214E] font-semibold mb-2 text-sm md:text-base break-words">{servicio.titulo}</h4>
            <p class="text-gray-700 text-center text-xs sm:text-sm md:text-base text-balance break-words">
              {servicio.desc}
            </p>
          </div>
        ))}
      </div>
      <!-- Botón siguiente -->
      <button
        id="next-servicio"
        class="absolute right-2 md:right-4 top-1/2 -translate-y-1/2 bg-black/50 text-white p-1 md:p-2 rounded-full hover:bg-black/70 transition-colors z-10 hidden sm:flex"
        aria-label="Servicio siguiente"
        type="button"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 md:h-6 md:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
      <!-- Indicadores dinámicos -->
      <div class="flex justify-center gap-2 mt-4 sm:hidden" id="indicadores-servicios"></div>
    </div>
  </div>
</section>

<script is:inline>
  // Animación fade-in
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.15 });
    document.querySelectorAll('.fade-section').forEach(el => observer.observe(el));

    // Carrusel JS puro
    const carousel = document.getElementById('carousel-servicios');
    const prevBtn = document.getElementById('prev-servicio');
    const nextBtn = document.getElementById('next-servicio');
    const cards = carousel.querySelectorAll('div.snap-center');
    const indicadores = document.getElementById('indicadores-servicios');
    let current = 0;
    // Calcula el desplazamiento horizontal exacto
    const scrollToCard = (idx) => {
      if (cards[idx]) {
        const card = cards[idx];
        const left = card.offsetLeft - carousel.offsetLeft;
        carousel.scrollTo({ left, behavior: 'smooth' });
        current = idx;
        updateIndicadores();
      }
    };
    // Función para encontrar el índice más cercano al scroll actual
    const getClosestIndex = () => {
      let minDist = Infinity;
      let idx = 0;
      cards.forEach((card, i) => {
        const dist = Math.abs(card.offsetLeft - carousel.scrollLeft);
        if (dist < minDist) {
          minDist = dist;
          idx = i;
        }
      });
      return idx;
    };
    prevBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      current = getClosestIndex();
      if (current > 0) scrollToCard(current - 1);
    });
    nextBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      current = getClosestIndex();
      if (current < cards.length - 1) scrollToCard(current + 1);
    });
    // Indicadores dinámicos
    function updateIndicadores() {
      indicadores.innerHTML = '';
      for (let i = 0; i < cards.length; i++) {
        const dot = document.createElement('div');
        dot.className = `w-2 h-2 rounded-full ${i === current ? 'bg-[#06214E]' : 'bg-[#06214E]/30'}`;
        dot.style.cursor = 'pointer';
        dot.onclick = () => scrollToCard(i);
        indicadores.appendChild(dot);
      }
    }
    updateIndicadores();
    // Actualizar el índice al hacer scroll manual
    carousel.addEventListener('scroll', () => {
      let idx = getClosestIndex();
      if (idx !== current) {
        current = idx;
        updateIndicadores();
      }
    });

    // Drag-to-scroll con mouse optimizado
    let isDown = false;
    let startX;
    let scrollLeft;
    let rafId = null;
    let lastWalk = 0;
    function onMouseMove(e) {
      if (!isDown) return;
      const x = e.pageX - carousel.offsetLeft;
      lastWalk = (x - startX) * 0.8; // sensibilidad ajustada
      if (!rafId) {
        rafId = requestAnimationFrame(() => {
          carousel.scrollLeft = scrollLeft - lastWalk;
          rafId = null;
        });
      }
    }
    carousel.addEventListener('mousedown', (e) => {
      isDown = true;
      carousel.classList.add('cursor-grabbing');
      startX = e.pageX - carousel.offsetLeft;
      scrollLeft = carousel.scrollLeft;
      e.preventDefault();
    });
    carousel.addEventListener('mouseleave', () => {
      isDown = false;
      carousel.classList.remove('cursor-grabbing');
    });
    carousel.addEventListener('mouseup', () => {
      isDown = false;
      carousel.classList.remove('cursor-grabbing');
    });
    carousel.addEventListener('mousemove', onMouseMove);
  });
</script>
<style is:global>
@keyframes fade-in {
  from { opacity: 0; transform: translateY(32px);}
  to { opacity: 1; transform: translateY(0);}
}
.animate-fade-in {
  opacity: 1 !important;
  transform: none !important;
  animation: fade-in 0.8s cubic-bezier(0.4,0,0.2,1) both;
}
/* Ocultar scrollbars */
.scrollbar-hide::-webkit-scrollbar { display: none; }
.scrollbar-hide { -ms-overflow-style: none; scrollbar-width: none; }
.cursor-grabbing {
  cursor: grabbing !important;
}
</style>

