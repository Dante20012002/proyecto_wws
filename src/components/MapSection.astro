---
// Importamos los estilos de Leaflet
import 'leaflet/dist/leaflet.css';
import { proyectos } from '../data/proyectos';

// Obtener tipos únicos de proyectos
const tiposProyectos = [...new Set(proyectos.map(p => p.tipo))];
---

<section class="w-full bg-[#EAEAEA] py-8 md:py-12">
  <div class="max-w-6xl mx-auto px-4">
    <div class="flex flex-col md:flex-row gap-6 md:gap-8">
      <!-- Lista de proyectos -->
      <div class="w-full md:w-1/3">
        <div class="bg-white rounded-lg shadow-md p-4">
          <h3 class="text-[#06214E] text-lg font-semibold mb-3">¿Dónde hemos estado?</h3>
          <div class="space-y-2 max-h-[500px] overflow-y-auto">
            {proyectos.map(proyecto => (
              <div class="proyecto-item p-2 hover:bg-gray-50 rounded cursor-pointer" data-id={proyecto.id}>
                <h4 class="font-medium text-[#06214E]">{proyecto.nombre}</h4>
                <p class="text-sm text-gray-600">{proyecto.ubicacion.ciudad}, {proyecto.ubicacion.departamento}</p>
              </div>
            ))}
          </div>
        </div>
      </div>

      <!-- Mapa -->
      <div class="w-full md:w-2/3">
        <div id="map" class="w-full h-[500px] rounded-lg shadow-md"></div>
      </div>
    </div>
  </div>
</section>

<style>
  #map {
    z-index: 0;
  }
  .custom-marker {
    position: relative;
  }

  .marker-pulse {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .marker-pulse::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    animation: pulse 2s infinite;
    opacity: 0.6;
  }

  .marker-pulse.hover {
    transform: scale(1.2);
  }

  .marker-pulse.hover::before {
    animation: none;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
      opacity: 0.6;
    }
    70% {
      transform: scale(2);
      opacity: 0;
    }
    100% {
      transform: scale(1);
      opacity: 0;
    }
  }

  /* Estilos para el tooltip */
  :global(.leaflet-tooltip) {
    background-color: white;
    border: none;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    max-width: 300px !important;
  }

  :global(.custom-tooltip) {
    font-family: system-ui, -apple-system, sans-serif;
  }

  /* Utilidades para truncar texto */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script define:vars={{ proyectos }}>
  // Función para obtener el color según el tipo de proyecto
  const getColorByType = (tipo) => {
    const colors = {
      instalacion: '#06214E',
      mantenimiento: '#1a4b9c',
      consultoria: '#2c6cb0',
      venta: '#3d8cc4'
    };
    return colors[tipo] || '#06214E';
  };

  // Función para crear un marcador con animación
  const createAnimatedMarker = (proyecto, map, L) => {
    const color = getColorByType(proyecto.tipo);
    
    const marker = L.marker([proyecto.ubicacion.lat, proyecto.ubicacion.lng], {
      icon: L.divIcon({
        className: 'custom-marker',
        html: `<div class="marker-pulse" style="background-color: ${color}"></div>`,
        iconSize: [20, 20]
      })
    }).addTo(map);

    // Añadir tooltip con información detallada
    marker.bindTooltip(`
      <div class="p-3 max-w-[300px]">
        <h4 class="font-bold text-[#06214E] text-lg mb-2">${proyecto.nombre}</h4>
        <p class="text-sm mb-2 line-clamp-2">${proyecto.descripcion}</p>
        <div class="text-xs text-gray-600 space-y-1">
          <p><strong>Ubicación:</strong> ${proyecto.ubicacion.ciudad}, ${proyecto.ubicacion.departamento}</p>
          <p><strong>Fecha:</strong> ${proyecto.fecha}</p>
          <p><strong>Capacidad:</strong> ${proyecto.capacidad}</p>
          <p class="line-clamp-3"><strong>Detalles:</strong> ${proyecto.detalles}</p>
        </div>
      </div>
    `, {
      permanent: false,
      direction: 'top',
      className: 'custom-tooltip'
    });

    // Añadir efecto hover
    marker.on('mouseover', () => {
      marker.setIcon(L.divIcon({
        className: 'custom-marker hover',
        html: `<div class="marker-pulse hover" style="background-color: ${color}"></div>`,
        iconSize: [24, 24]
      }));
    });

    marker.on('mouseout', () => {
      marker.setIcon(L.divIcon({
        className: 'custom-marker',
        html: `<div class="marker-pulse" style="background-color: ${color}"></div>`,
        iconSize: [20, 20]
      }));
    });

    return marker;
  };

  // Inicializar el mapa cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    // Cargar Leaflet dinámicamente
    const script = document.createElement('script');
    script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';
    script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';
    script.crossOrigin = '';
    
    script.onload = () => {
      const L = window.L;
      
      // Configuración del mapa
      const map = L.map('map').setView([4.5709, -74.2973], 6);

      // Añadir capa de mapa base
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
      }).addTo(map);

      // Crear marcadores para cada proyecto
      const markers = proyectos.map(proyecto => createAnimatedMarker(proyecto, map, L));

      // Manejar clic en items de la lista
      document.querySelectorAll('.proyecto-item').forEach((item, index) => {
        item.addEventListener('click', () => {
          const proyecto = proyectos[index];
          map.setView([proyecto.ubicacion.lat, proyecto.ubicacion.lng], 12);
          markers[index].openTooltip();
        });
      });
    };

    document.head.appendChild(script);
  });
</script>